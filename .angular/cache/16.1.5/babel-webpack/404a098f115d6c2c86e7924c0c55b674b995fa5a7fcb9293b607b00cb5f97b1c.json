{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Years } from '../modules/student/models/student.model';\nexport let StudentFormComponent = class StudentFormComponent {\n  get student() {\n    return this._student;\n  }\n  set student(value) {\n    this._student = value;\n    if (this._student != undefined) {\n      this.studentForm = new FormGroup({\n        \"idS\": new FormControl(this.student?.idS),\n        \"id\": new FormControl(this.student?.id, [Validators.required, Validators.minLength(4)]),\n        \"firstname\": new FormControl(this.student?.firstname, Validators.required),\n        \"lastname\": new FormControl(this.student?.lastname),\n        \"address\": new FormControl(this.student?.address),\n        \"telephone\": new FormControl(this.student?.telephone),\n        \"active\": new FormControl(this.student?.active),\n        \"marksAvg\": new FormControl(this.student?.marksAvg),\n        \"leftDate\": new FormControl(this.student?.leftDate),\n        \"subjects\": new FormControl(this.student?.sujects),\n        \"years\": new FormControl(this.student?.years),\n        \"absentDays\": new FormControl(this.student?.absentDays)\n      });\n    }\n  }\n  begginingDate(begginingDate) {\n    this.begginingDate_s = begginingDate;\n  }\n  numbersOfDays(numbersOfDays) {\n    this.numbersOfDays_s = numbersOfDays;\n  }\n  saveStudent() {\n    this.newStudent = this.studentForm.value;\n    // if (this.newStudent.idS != 0) {\n    //   this.abs = new AbsantDays(this.newStudent.idS, this.begginingDate_s, parseInt(this.numbersOfDays_s), 0)\n    //   this.newStudent.absentDays.push(this.abs)\n    // }\n    this.onSaveNewStudent.emit(this.newStudent);\n  }\n  constructor(_studentService) {\n    this._studentService = _studentService;\n    this.subjects = [\"English\", \"Math\", \"history\"];\n    this.yearsType = Years;\n    this.onSaveNewStudent = new EventEmitter();\n  }\n};\n__decorate([Input()], StudentFormComponent.prototype, \"student\", null);\n__decorate([Output()], StudentFormComponent.prototype, \"onSaveNewStudent\", void 0);\nStudentFormComponent = __decorate([Component({\n  selector: 'student-forms',\n  templateUrl: './student-forms.component.html',\n  styleUrls: ['./student-forms.component.css']\n})], StudentFormComponent);","map":{"version":3,"names":["Component","EventEmitter","Input","Output","FormControl","FormGroup","Validators","Years","StudentFormComponent","student","_student","value","undefined","studentForm","idS","id","required","minLength","firstname","lastname","address","telephone","active","marksAvg","leftDate","sujects","years","absentDays","begginingDate","begginingDate_s","numbersOfDays","numbersOfDays_s","saveStudent","newStudent","onSaveNewStudent","emit","constructor","_studentService","subjects","yearsType","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\user1\\Desktop\\angular\\angular_p\\src\\app\\student-form\\student-form.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AbsantDays } from '../modules/student/models/absantday.model';\nimport { Student, Years } from '../modules/student/models/student.model';\nimport { StudentService } from '../modules/student/student.service';\n\n\n\n@Component({\n  selector: 'student-forms',\n  templateUrl: './student-forms.component.html',\n  styleUrls: ['./student-forms.component.css']\n})\nexport class StudentFormComponent {\n\n  private _student?: Student\n  studentForm!: FormGroup;\n\n  public get student(): Student | undefined {\n    return this._student;\n  }\n\n\n  @Input()\n  public set student(value: Student | undefined) {\n    this._student = value;\n    if (this._student != undefined) {\n\n      this.studentForm = new FormGroup({\n        \"idS\": new FormControl(this.student?.idS),\n        \"id\": new FormControl(this.student?.id, [Validators.required, Validators.minLength(4)]),\n        \"firstname\": new FormControl(this.student?.firstname, Validators.required),\n        \"lastname\": new FormControl(this.student?.lastname),\n        \"address\": new FormControl(this.student?.address),\n        \"telephone\": new FormControl(this.student?.telephone),\n        \"active\": new FormControl(this.student?.active),\n        \"marksAvg\": new FormControl(this.student?.marksAvg),\n        \"leftDate\": new FormControl(this.student?.leftDate),\n        \"subjects\": new FormControl(this.student?.sujects),\n        \"years\": new FormControl(this.student?.years),\n        \"absentDays\": new FormControl(this.student?.absentDays),\n\n\n      });\n    }\n\n  }\n\n  begginingDate_s!: string;\n  numbersOfDays_s!: string\n  subjects: string[] = [\"English\", \"Math\", \"history\"];\n  yearsType = Years;\n  abs!: AbsantDays;\n  @Output()\n  onSaveNewStudent: EventEmitter<Student> = new EventEmitter();\n\n\n\n  begginingDate(begginingDate: string) { this.begginingDate_s = begginingDate }\n  numbersOfDays(numbersOfDays: string) { this.numbersOfDays_s = numbersOfDays }\n\n  newStudent!: Student;\n  new!: Student;\n  saveStudent() {\n\n\n    this.newStudent = this.studentForm.value;\n\n\n    // if (this.newStudent.idS != 0) {\n    //   this.abs = new AbsantDays(this.newStudent.idS, this.begginingDate_s, parseInt(this.numbersOfDays_s), 0)\n    //   this.newStudent.absentDays.push(this.abs)\n    // }\n\n    this.onSaveNewStudent.emit(this.newStudent);\n\n  }\n\n\n  constructor(private _studentService: StudentService) {\n\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AACtE,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAEnE,SAAkBC,KAAK,QAAQ,yCAAyC;AAUjE,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAK/B,IAAWC,OAAOA,CAAA;IAChB,OAAO,IAAI,CAACC,QAAQ;EACtB;EAIA,IAAWD,OAAOA,CAACE,KAA0B;IAC3C,IAAI,CAACD,QAAQ,GAAGC,KAAK;IACrB,IAAI,IAAI,CAACD,QAAQ,IAAIE,SAAS,EAAE;MAE9B,IAAI,CAACC,WAAW,GAAG,IAAIR,SAAS,CAAC;QAC/B,KAAK,EAAE,IAAID,WAAW,CAAC,IAAI,CAACK,OAAO,EAAEK,GAAG,CAAC;QACzC,IAAI,EAAE,IAAIV,WAAW,CAAC,IAAI,CAACK,OAAO,EAAEM,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACvF,WAAW,EAAE,IAAIb,WAAW,CAAC,IAAI,CAACK,OAAO,EAAES,SAAS,EAAEZ,UAAU,CAACU,QAAQ,CAAC;QAC1E,UAAU,EAAE,IAAIZ,WAAW,CAAC,IAAI,CAACK,OAAO,EAAEU,QAAQ,CAAC;QACnD,SAAS,EAAE,IAAIf,WAAW,CAAC,IAAI,CAACK,OAAO,EAAEW,OAAO,CAAC;QACjD,WAAW,EAAE,IAAIhB,WAAW,CAAC,IAAI,CAACK,OAAO,EAAEY,SAAS,CAAC;QACrD,QAAQ,EAAE,IAAIjB,WAAW,CAAC,IAAI,CAACK,OAAO,EAAEa,MAAM,CAAC;QAC/C,UAAU,EAAE,IAAIlB,WAAW,CAAC,IAAI,CAACK,OAAO,EAAEc,QAAQ,CAAC;QACnD,UAAU,EAAE,IAAInB,WAAW,CAAC,IAAI,CAACK,OAAO,EAAEe,QAAQ,CAAC;QACnD,UAAU,EAAE,IAAIpB,WAAW,CAAC,IAAI,CAACK,OAAO,EAAEgB,OAAO,CAAC;QAClD,OAAO,EAAE,IAAIrB,WAAW,CAAC,IAAI,CAACK,OAAO,EAAEiB,KAAK,CAAC;QAC7C,YAAY,EAAE,IAAItB,WAAW,CAAC,IAAI,CAACK,OAAO,EAAEkB,UAAU;OAGvD,CAAC;;EAGN;EAYAC,aAAaA,CAACA,aAAqB;IAAI,IAAI,CAACC,eAAe,GAAGD,aAAa;EAAC;EAC5EE,aAAaA,CAACA,aAAqB;IAAI,IAAI,CAACC,eAAe,GAAGD,aAAa;EAAC;EAI5EE,WAAWA,CAAA;IAGT,IAAI,CAACC,UAAU,GAAG,IAAI,CAACpB,WAAW,CAACF,KAAK;IAGxC;IACA;IACA;IACA;IAEA,IAAI,CAACuB,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAACF,UAAU,CAAC;EAE7C;EAGAG,YAAoBC,eAA+B;IAA/B,KAAAA,eAAe,GAAfA,eAAe;IA7BnC,KAAAC,QAAQ,GAAa,CAAC,SAAS,EAAE,MAAM,EAAE,SAAS,CAAC;IACnD,KAAAC,SAAS,GAAGhC,KAAK;IAGjB,KAAA2B,gBAAgB,GAA0B,IAAIjC,YAAY,EAAE;EA2B5D;CAED;AA3DCuC,UAAA,EADCtC,KAAK,EAAE,C,kDAuBP;AAQDsC,UAAA,EADCrC,MAAM,EAAE,C,6DACoD;AAzClDK,oBAAoB,GAAAgC,UAAA,EALhCxC,SAAS,CAAC;EACTyC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWnC,oBAAoB,CAsEhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}