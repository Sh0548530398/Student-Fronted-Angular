{"ast":null,"code":"import { Subject, debounceTime, distinctUntilChanged, of } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StudentService {\n  searchStudents() {\n    return this.searchTerms.pipe(debounceTime(300), distinctUntilChanged(), switchMap(term => this.searchStudentsHttp(term)));\n  }\n  searchStudentsHttp(term) {\n    if (!term.trim()) {\n      return of([]);\n    }\n    return this.http.get(`${this.apiUrl}/search?term=${term}`);\n  }\n  updateSearchTerm(term) {\n    this.searchTerms.next(term);\n  }\n  getFromServer() {\n    return this._http.get(\"api/Student\");\n  }\n  // searchStudents(term: string): Observable<Student[]>|undefined {\n  //   if (!term.trim()) {\n  //     // אם אין ערך לחיפוש, יכול להחזיר מערך ריק או null, כפי שתבחר\n  //     return of([]);\n  //   }\n  // }\n  getFromServerById(idS) {\n    return this._http.get(\"api/Student/\" + idS);\n  }\n  getFromServerMarksById(idS) {\n    return this._http.get(\"api/Student/\" + idS);\n  }\n  getFromServerByActive(active) {\n    return this._http.get(\"api/Student/\" + active);\n  }\n  postInServer(students) {\n    return this._http.post(\"api/Student\", students);\n  }\n  putInServer(id, students) {\n    return this._http.put(\"api/Student/\" + id, students);\n  }\n  addAbsantDayInServer(id, absant) {\n    return this._http.post(\"api/Student/\" + id, absant);\n  }\n  deletFromServer(idS) {\n    return this._http.delete(\"api/Student/\" + idS);\n  }\n  constructor(_http) {\n    this._http = _http;\n    this.searchTerms = new Subject();\n  }\n}\nStudentService.ɵfac = function StudentService_Factory(t) {\n  return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n};\nStudentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StudentService,\n  factory: StudentService.ɵfac\n});","map":{"version":3,"names":["Subject","debounceTime","distinctUntilChanged","of","StudentService","searchStudents","searchTerms","pipe","switchMap","term","searchStudentsHttp","trim","http","get","apiUrl","updateSearchTerm","next","getFromServer","_http","getFromServerById","idS","getFromServerMarksById","getFromServerByActive","active","postInServer","students","post","putInServer","id","put","addAbsantDayInServer","absant","deletFromServer","delete","constructor","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["C:\\Users\\user1\\Desktop\\angular\\angular_p\\src\\app\\modules\\student\\student.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable,Subject,debounceTime,distinctUntilChanged,of } from \"rxjs\";\r\nimport { Student } from \"./models/student.model\";\r\nimport { AbsantDays } from \"./models/absantday.model\";\r\n\r\n\r\n@Injectable()\r\nexport class StudentService {\r\n\r\n  private searchTerms = new Subject<string>();\r\n\r\n  \r\n  searchStudents(): Observable<Student[]> {\r\n    return this.searchTerms.pipe(\r\n      debounceTime(300),\r\n      distinctUntilChanged(),\r\n      switchMap((term: string) => this.searchStudentsHttp(term))\r\n    );\r\n  }\r\n\r\n  searchStudentsHttp(term: string): Observable<Student[]> {\r\n    if (!term.trim()) {\r\n      return of([]);\r\n    }\r\n\r\n    return this.http.get<Student[]>(`${this.apiUrl}/search?term=${term}`);\r\n  }\r\n\r\n  updateSearchTerm(term: string): void {\r\n    this.searchTerms.next(term);\r\n  }\r\n  getFromServer():Observable<Student[]>{\r\n    return this._http.get<Student[]>(\"api/Student\");\r\n  }\r\n  // searchStudents(term: string): Observable<Student[]>|undefined {\r\n  //   if (!term.trim()) {\r\n  //     // אם אין ערך לחיפוש, יכול להחזיר מערך ריק או null, כפי שתבחר\r\n  //     return of([]);\r\n  //   }\r\n  // }\r\n\r\n  getFromServerById(idS:number):Observable<Student>{\r\n    return this._http.get<Student>(\"api/Student/\"+idS);\r\n  }\r\n\r\n  getFromServerMarksById(idS:number):Observable<number>{\r\n    return this._http.get<number>(\"api/Student/\"+idS);\r\n  }\r\n\r\n  getFromServerByActive(active:boolean):Observable<Student[]>{\r\n    return this._http.get<Student[]>(\"api/Student/\"+active);\r\n  }\r\n\r\n  postInServer(students:Student):Observable<boolean>{\r\n   return this._http.post<boolean>(\"api/Student\",students);\r\n  }\r\n  putInServer(id:number, students:Student):Observable<boolean>{\r\n   \r\n    return this._http.put<boolean>(\"api/Student/\"+id,students);\r\n   }\r\n   addAbsantDayInServer(id:number, absant:AbsantDays):Observable<boolean>{\r\n   \r\n    return this._http.post<boolean>(\"api/Student/\"+id,absant);\r\n   }\r\n   deletFromServer(idS:number):Observable<boolean>{\r\n    return this._http.delete<boolean>(\"api/Student/\"+idS);\r\n   }\r\n \r\n\r\n\r\n  constructor(private _http:HttpClient)\r\n  {\r\n    \r\n  }\r\n}"],"mappings":"AAEA,SAAoBA,OAAO,EAACC,YAAY,EAACC,oBAAoB,EAACC,EAAE,QAAQ,MAAM;;;AAM9E,OAAM,MAAOC,cAAc;EAKzBC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACC,WAAW,CAACC,IAAI,CAC1BN,YAAY,CAAC,GAAG,CAAC,EACjBC,oBAAoB,EAAE,EACtBM,SAAS,CAAEC,IAAY,IAAK,IAAI,CAACC,kBAAkB,CAACD,IAAI,CAAC,CAAC,CAC3D;EACH;EAEAC,kBAAkBA,CAACD,IAAY;IAC7B,IAAI,CAACA,IAAI,CAACE,IAAI,EAAE,EAAE;MAChB,OAAOR,EAAE,CAAC,EAAE,CAAC;;IAGf,OAAO,IAAI,CAACS,IAAI,CAACC,GAAG,CAAY,GAAG,IAAI,CAACC,MAAM,gBAAgBL,IAAI,EAAE,CAAC;EACvE;EAEAM,gBAAgBA,CAACN,IAAY;IAC3B,IAAI,CAACH,WAAW,CAACU,IAAI,CAACP,IAAI,CAAC;EAC7B;EACAQ,aAAaA,CAAA;IACX,OAAO,IAAI,CAACC,KAAK,CAACL,GAAG,CAAY,aAAa,CAAC;EACjD;EACA;EACA;EACA;EACA;EACA;EACA;EAEAM,iBAAiBA,CAACC,GAAU;IAC1B,OAAO,IAAI,CAACF,KAAK,CAACL,GAAG,CAAU,cAAc,GAACO,GAAG,CAAC;EACpD;EAEAC,sBAAsBA,CAACD,GAAU;IAC/B,OAAO,IAAI,CAACF,KAAK,CAACL,GAAG,CAAS,cAAc,GAACO,GAAG,CAAC;EACnD;EAEAE,qBAAqBA,CAACC,MAAc;IAClC,OAAO,IAAI,CAACL,KAAK,CAACL,GAAG,CAAY,cAAc,GAACU,MAAM,CAAC;EACzD;EAEAC,YAAYA,CAACC,QAAgB;IAC5B,OAAO,IAAI,CAACP,KAAK,CAACQ,IAAI,CAAU,aAAa,EAACD,QAAQ,CAAC;EACxD;EACAE,WAAWA,CAACC,EAAS,EAAEH,QAAgB;IAErC,OAAO,IAAI,CAACP,KAAK,CAACW,GAAG,CAAU,cAAc,GAACD,EAAE,EAACH,QAAQ,CAAC;EAC3D;EACAK,oBAAoBA,CAACF,EAAS,EAAEG,MAAiB;IAEhD,OAAO,IAAI,CAACb,KAAK,CAACQ,IAAI,CAAU,cAAc,GAACE,EAAE,EAACG,MAAM,CAAC;EAC1D;EACAC,eAAeA,CAACZ,GAAU;IACzB,OAAO,IAAI,CAACF,KAAK,CAACe,MAAM,CAAU,cAAc,GAACb,GAAG,CAAC;EACtD;EAIDc,YAAoBhB,KAAgB;IAAhB,KAAAA,KAAK,GAALA,KAAK;IA7DjB,KAAAZ,WAAW,GAAG,IAAIN,OAAO,EAAU;EAgE3C;;AAlEWI,cAAc,C;mBAAdA,cAAc,EAAA+B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdlC,cAAc,C;SAAdA,cAAc;EAAAmC,OAAA,EAAdnC,cAAc,CAAAoC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}