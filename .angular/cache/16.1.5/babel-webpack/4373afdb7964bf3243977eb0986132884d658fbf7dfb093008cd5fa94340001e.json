{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Student, Years } from '../../models/student.model';\nimport { Test } from '../../models/test.model';\nexport let AddStudentComponent = class AddStudentComponent {\n  setForm() {\n    this.studentForm = new FormGroup({\n      \"idS\": new FormControl(this.student?.idS),\n      \"id\": new FormControl(this.student?.id, [Validators.required, Validators.minLength(4)]),\n      \"firstname\": new FormControl(this.student?.firstname, Validators.required),\n      \"lastname\": new FormControl(this.student?.lastname),\n      \"address\": new FormControl(this.student?.address),\n      \"telephone\": new FormControl(this.student?.telephone),\n      \"active\": new FormControl(this.student?.active),\n      \"marksAvg\": new FormControl(this.student?.marksAvg),\n      \"leftDate\": new FormControl(this.student?.leftDate),\n      \"subjects\": new FormControl(this.student?.sujects),\n      \"years\": new FormControl(this.student?.years),\n      \"absentDays\": new FormControl(this.student?.absentDays)\n    });\n  }\n  addStudent() {\n    this.newStudent = this.studentForm.value;\n    this.postInServer(this.newStudent);\n    this.returnToList();\n  }\n  postInServer(student) {\n    this._studentService.postInServer(student).subscribe(data => {\n      if (data) {} else {\n        alert(\"the adding didn't succeed\");\n      }\n    });\n  }\n  returnToList() {\n    this._router.navigate([\"/students\"]);\n  }\n  constructor(_studentService, _acr, _router) {\n    this._studentService = _studentService;\n    this._acr = _acr;\n    this._router = _router;\n    this.subjects = [\"English\", \"Math\", \"history\"];\n    this.yearsType = Years;\n  }\n  ngOnInit() {\n    this.student = new Student(\"\", \"\", \"\", \"\", \"\", true, 0, [new Test(\"1234\", new Date(2023, 12, 23), \"English\", 80)], [], Years.first, [{\n      idN: 0,\n      numbersOfDays: 0,\n      begginingDate: \"\",\n      sumdays: 0\n    }]);\n  }\n};\nAddStudentComponent = __decorate([Component({\n  selector: 'add-student',\n  templateUrl: './add-student.component.html'\n})], AddStudentComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","Student","Years","Test","AddStudentComponent","setForm","studentForm","student","idS","id","required","minLength","firstname","lastname","address","telephone","active","marksAvg","leftDate","sujects","years","absentDays","addStudent","newStudent","value","postInServer","returnToList","_studentService","subscribe","data","alert","_router","navigate","constructor","_acr","subjects","yearsType","ngOnInit","Date","first","idN","numbersOfDays","begginingDate","sumdays","__decorate","selector","templateUrl"],"sources":["C:\\Users\\user1\\Desktop\\angular\\angular_p\\src\\app\\modules\\student\\components\\add-student\\add-student.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Student, Years } from '../../models/student.model';\nimport { StudentService } from '../../student.service';\nimport { Test } from '../../models/test.model';\n\n@Component({\n  selector: 'add-student',\n  templateUrl: './add-student.component.html'\n})\nexport class AddStudentComponent {\n\n   student!: Student\n  studentForm!: FormGroup;\n\n setForm(){\n  this.studentForm = new FormGroup({\n    \"idS\": new FormControl(this.student?.idS),\n    \"id\": new FormControl(this.student?.id, [Validators.required, Validators.minLength(4)]),\n    \"firstname\": new FormControl(this.student?.firstname, Validators.required),\n    \"lastname\": new FormControl(this.student?.lastname),\n    \"address\": new FormControl(this.student?.address),\n    \"telephone\": new FormControl(this.student?.telephone),\n    \"active\": new FormControl(this.student?.active),\n    \"marksAvg\": new FormControl(this.student?.marksAvg),\n    \"leftDate\": new FormControl(this.student?.leftDate),\n    \"subjects\": new FormControl(this.student?.sujects),\n    \"years\": new FormControl(this.student?.years),\n    \"absentDays\": new FormControl(this.student?.absentDays),\n  });\n }\n  subjects: string[] = [\"English\", \"Math\", \"history\"];\n  yearsType = Years;\n\n  newStudent!: Student;\n  \n  \n  addStudent() {\n    this.newStudent = this.studentForm.value;\n    this.postInServer(this.newStudent)\n    this.returnToList()\n  }\n\n  postInServer(student:Student){\n    this._studentService.postInServer(student).subscribe(data=>{\n     if(data){\n      \n     }\n     else{\n      alert(\"the adding didn't succeed\")\n     }\n    })\n  }\n  \n  returnToList(){\n    this._router.navigate([\"/students\"])\n  }\n\n  constructor(private _studentService: StudentService, private _acr: ActivatedRoute, private _router: Router) {\n\n  }\n\n  ngOnInit(): void {\n    this.student=new Student(\"\", \"\", \"\", \"\", \"\", true, 0, [new Test(\"1234\", new Date(2023, 12, 23), \"English\", 80)], [], \n    Years.first, [{ idN: 0, numbersOfDays: 0, begginingDate: \"\", sumdays: 0 }])\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}