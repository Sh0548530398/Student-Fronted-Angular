{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AbsantDays } from '../modules/student/models/absantday.model';\nimport { Years } from '../modules/student/models/student.model';\nexport let StudentFormsComponent = class StudentFormsComponent {\n  get student() {\n    return this._student;\n  }\n  set student(value) {\n    this._student = value;\n    if (this._student != undefined) {\n      this.studentForm = new FormGroup({\n        \"idS\": new FormControl(this.student?.idS),\n        \"id\": new FormControl(this.student?.id, [Validators.required, Validators.minLength(4)]),\n        \"firstname\": new FormControl(this.student?.firstname, Validators.required),\n        \"lastname\": new FormControl(this.student?.lastname),\n        \"address\": new FormControl(this.student?.address),\n        \"telephone\": new FormControl(this.student?.telephone),\n        \"active\": new FormControl(this.student?.active),\n        \"marksAvg\": new FormControl(this.student?.marksAvg),\n        \"leftDate\": new FormControl(this.student?.leftDate),\n        \"subjects\": new FormControl(this.student?.sujects),\n        \"years\": new FormControl(this.student?.years),\n        \"absentDays\": new FormControl(this.student?.absentDays)\n      });\n    }\n  }\n  begginingDate(begginingDate) {\n    this.begginingDate_s = begginingDate;\n  }\n  numbersOfDays(numbersOfDays) {\n    this.numbersOfDays_s = numbersOfDays;\n  }\n  saveStudent() {\n    this.newStudent = this.studentForm.value;\n    if (this.newStudent.idS != 0) {\n      this.abs = new AbsantDays(this.newStudent.idS, this.begginingDate_s, parseInt(this.numbersOfDays_s), 0);\n      this.addAbsantDayInServer(this.newStudent.idS, this.abs);\n    }\n  }\n  save2() {\n    this.newStudent = this.studentForm.value;\n    this.putInServer(this.newStudent.idS, this.newStudent);\n  }\n  addAbsantDayInServer(id, absant) {\n    this._studentService.addAbsantDayInServer(id, absant).subscribe(data => {});\n  }\n  putInServer(id, student) {\n    this._studentService.putInServer(id, student).subscribe(data => {\n      if (data) {} else {\n        alert(\"the update didn't succeed\");\n      }\n    });\n  }\n  getFromServerById(idS) {\n    this._studentService.getFromServerById(idS).subscribe(data => {\n      this.student = data;\n    });\n  }\n  constructor(_studentService, _acr, _router) {\n    this._studentService = _studentService;\n    this._acr = _acr;\n    this._router = _router;\n    this.subjects = [\"English\", \"Math\", \"history\"];\n    this.yearsType = Years;\n  }\n  ngOnInit() {\n    this._acr.paramMap.subscribe(paraMap => {\n      if (paraMap.has(\"idS\")) {\n        this.SIdS = +paraMap.get(\"idS\");\n      }\n    });\n    this.getFromServerById(this.SIdS);\n  }\n};\nStudentFormsComponent = __decorate([Component({\n  selector: 'student-forms',\n  templateUrl: './student-forms.component.html'\n})], StudentFormsComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","AbsantDays","Years","StudentFormsComponent","student","_student","value","undefined","studentForm","idS","id","required","minLength","firstname","lastname","address","telephone","active","marksAvg","leftDate","sujects","years","absentDays","begginingDate","begginingDate_s","numbersOfDays","numbersOfDays_s","saveStudent","newStudent","abs","parseInt","addAbsantDayInServer","save2","putInServer","absant","_studentService","subscribe","data","alert","getFromServerById","constructor","_acr","_router","subjects","yearsType","ngOnInit","paramMap","paraMap","has","SIdS","get","__decorate","selector","templateUrl"],"sources":["C:\\Users\\user1\\Desktop\\angular\\angular_p\\src\\app\\student-forms\\student-forms.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AbsantDays } from '../modules/student/models/absantday.model';\nimport { Student, Years } from '../modules/student/models/student.model';\nimport { StudentService } from '../modules/student/student.service';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'student-forms',\n  templateUrl: './student-forms.component.html'\n})\nexport class StudentFormsComponent {\n\n  private _student?: Student\n  studentForm!: FormGroup;\n\n  public get student(): Student | undefined {\n    return this._student;\n  }\n\n\n  \n  public set student(value: Student | undefined) {\n    this._student = value;\n    if (this._student != undefined) {\n\n      this.studentForm = new FormGroup({\n        \"idS\": new FormControl(this.student?.idS),\n        \"id\": new FormControl(this.student?.id, [Validators.required, Validators.minLength(4)]),\n        \"firstname\": new FormControl(this.student?.firstname, Validators.required),\n        \"lastname\": new FormControl(this.student?.lastname),\n        \"address\": new FormControl(this.student?.address),\n        \"telephone\": new FormControl(this.student?.telephone),\n        \"active\": new FormControl(this.student?.active),\n        \"marksAvg\": new FormControl(this.student?.marksAvg),\n        \"leftDate\": new FormControl(this.student?.leftDate),\n        \"subjects\": new FormControl(this.student?.sujects),\n        \"years\": new FormControl(this.student?.years),\n        \"absentDays\": new FormControl(this.student?.absentDays),\n\n\n      });\n    }\n\n  }\n\n  begginingDate_s!: string;\n  numbersOfDays_s!: string\n  subjects: string[] = [\"English\", \"Math\", \"history\"];\n  yearsType = Years;\n  abs!: AbsantDays;\n\n\n\n\n  begginingDate(begginingDate: string) { this.begginingDate_s = begginingDate }\n  numbersOfDays(numbersOfDays: string) { this.numbersOfDays_s = numbersOfDays }\n\n  newStudent!: Student;\n  new!: Student;\n  saveStudent() {\n\n\n    this.newStudent = this.studentForm.value;\n\n\n    if (this.newStudent.idS != 0) {\n      this.abs = new AbsantDays(this.newStudent.idS, this.begginingDate_s, parseInt(this.numbersOfDays_s), 0)\n      this.addAbsantDayInServer(this.newStudent.idS,this.abs);\n    }\n    \n\n  }\n  save2(){\n    this.newStudent = this.studentForm.value;\n    this.putInServer(this.newStudent.idS,this.newStudent)\n  }\n\n  addAbsantDayInServer(id:number,absant:AbsantDays){\n    this._studentService.addAbsantDayInServer(id,absant).subscribe(data=>{\n      })\n  }\n  \n  putInServer(id:number, student:Student){\n    this._studentService.putInServer(id,student).subscribe(data=>{\n      if(data){\n       }\n       else{\n        alert(\"the update didn't succeed\")\n       }\n      })\n  }\n  SIdS!:number\n  getFromServerById(idS:number){\n    this._studentService.getFromServerById(idS).subscribe(data=>{\n      this.student=data;\n    });\n  }\n  constructor(private _studentService: StudentService, private _acr:ActivatedRoute,private _router:R) {\n\n  }\nngOnInit():void{\n  this._acr.paramMap.subscribe(paraMap=>{\n    if(paraMap.has(\"idS\")){\n      this.SIdS=+paraMap.get(\"idS\");\n    }\n    \n  })\n  this.getFromServerById(this.SIdS);\n}\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}