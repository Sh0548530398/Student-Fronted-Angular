{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./student.service\";\nexport class TestService {\n  //מקבלת ID ומחחזירה ממוצע ציונים\n  avgMark(id) {\n    let STUDENTS;\n    let count = 0;\n    let allmarks = 0;\n    this._ser.getFromServer().subscribe(data => {\n      STUDENTS = data;\n    });\n    for (let s of STUDENTS) {\n      if (s.id == id) {\n        if (s.testList != undefined) {\n          for (let t of s.testList) {\n            if (t.mark != undefined) {\n              allmarks += t.mark;\n              count++;\n            }\n          }\n        }\n        return allmarks / count;\n      }\n    }\n    return 0;\n  }\n  constructor(_ser) {\n    this._ser = _ser;\n  }\n}\nTestService.ɵfac = function TestService_Factory(t) {\n  return new (t || TestService)(i0.ɵɵinject(i1.StudentService));\n};\nTestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TestService,\n  factory: TestService.ɵfac\n});","map":{"version":3,"names":["TestService","avgMark","id","STUDENTS","count","allmarks","_ser","getFromServer","subscribe","data","s","testList","undefined","t","mark","constructor","i0","ɵɵinject","i1","StudentService","factory","ɵfac"],"sources":["C:\\Users\\user1\\Desktop\\angular\\angular_p\\src\\app\\modules\\student\\test.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { StudentService } from \"./student.service\";\r\nimport { Student } from \"./models/student.model\";\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class TestService {\r\n\r\n //מקבלת ID ומחחזירה ממוצע ציונים\r\n avgMark(id: string): number {\r\n    let STUDENTS!:Student[];\r\n    let count=0;\r\n    let allmarks=0;\r\n    this._ser\r\n    .getFromServer().subscribe(data=>{\r\n      STUDENTS=data;\r\n     });\r\n    for (let s of STUDENTS) {\r\n      if (s.id == id) {\r\n        if(s.testList!=undefined){\r\n            for(let t of s.testList){\r\n              if(t.mark!=undefined)\r\n              {\r\n                allmarks+=t.mark\r\n                count++\r\n              }\r\n                \r\n            }\r\n\r\n        }\r\n        return allmarks/count;\r\n      }\r\n    }\r\n    return 0;\r\n\r\n  }\r\n\r\n constructor(private _ser:StudentService){\r\n\r\n }   \r\n}"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAEvB;EACAC,OAAOA,CAACC,EAAU;IACf,IAAIC,QAAmB;IACvB,IAAIC,KAAK,GAAC,CAAC;IACX,IAAIC,QAAQ,GAAC,CAAC;IACd,IAAI,CAACC,IAAI,CACRC,aAAa,EAAE,CAACC,SAAS,CAACC,IAAI,IAAE;MAC/BN,QAAQ,GAACM,IAAI;IACd,CAAC,CAAC;IACH,KAAK,IAAIC,CAAC,IAAIP,QAAQ,EAAE;MACtB,IAAIO,CAAC,CAACR,EAAE,IAAIA,EAAE,EAAE;QACd,IAAGQ,CAAC,CAACC,QAAQ,IAAEC,SAAS,EAAC;UACrB,KAAI,IAAIC,CAAC,IAAIH,CAAC,CAACC,QAAQ,EAAC;YACtB,IAAGE,CAAC,CAACC,IAAI,IAAEF,SAAS,EACpB;cACEP,QAAQ,IAAEQ,CAAC,CAACC,IAAI;cAChBV,KAAK,EAAE;;;;QAMf,OAAOC,QAAQ,GAACD,KAAK;;;IAGzB,OAAO,CAAC;EAEV;EAEDW,YAAoBT,IAAmB;IAAnB,KAAAA,IAAI,GAAJA,IAAI;EAExB;;AAjCYN,WAAW,C;mBAAXA,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAXnB,WAAW,C;SAAXA,WAAW;EAAAoB,OAAA,EAAXpB,WAAW,CAAAqB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}