{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Student } from '../modules/student/models/student.model';\nimport { Test } from '../modules/student/models/test.model';\nexport let StudentListComponent = class StudentListComponent {\n  // deleatStudent(student: string) {\n  //   for (let s of this.students) {\n  //     if (s.id == student) {\n  //       let studentToDeleate = s;\n  //       let studentToDeleate1 = this.students.indexOf(studentToDeleate);\n  //       this.students.splice(studentToDeleate1, 1);\n  //     }\n  //   }\n  // }\n  showDetails(student) {\n    this.selectedStudent = student;\n    for (let s of this.students) {\n      s.absentDays[0].sumdays = this._studentService.sumAbsantDays(s.idS);\n    }\n  }\n  addStudent() {\n    this.selectedStudent = new Student(\"\", \"\", \"\", \"\", \"\", true, 0, [new Test(\"1234\", new Date(2023, 12, 23), \"English\", 80)], [], Years.first, [{\n      idN: 0,\n      numbersOfDays: 0,\n      begginingDate: \"\",\n      sumdays: 0\n    }]);\n  }\n  addNewStudentToList(studentToAdd) {\n    if (studentToAdd.idS == 0) {\n      studentToAdd.idS = this.students.length + 1;\n      studentToAdd.absentDays[0].idN = this.students.length + 1;\n      // הוספה בסרוור שמחזירה מערך מעודכן\n      this.postInServer(studentToAdd);\n    } else {\n      this.putInServer(studentToAdd.idS, studentToAdd);\n    }\n    // for (let s of this.students) {\n    //   if (s.idS == studentToAdd.idS) {\n    //     s.absentDays[0].sumdays = this._studentService.sumAbsantDays(s.absentDays[0].idN)\n    //   }\n    // }\n    this.selectedStudent = undefined;\n  }\n  getFromServer() {\n    this._studentService.getFromServer().subscribe(data => {\n      this.students = data;\n    });\n  }\n  getFromServerByActive(active) {\n    this._studentService.getFromServerByActive(active).subscribe(data => {\n      this.students = data;\n    });\n  }\n  postInServer(student) {\n    this._studentService.postInServer(student).subscribe(data => {\n      if (data) {\n        this.getFromServer();\n      } else {\n        alert(\"the adding didn't succeed\");\n      }\n    });\n  }\n  putInServer(id, student) {\n    this._studentService.putInServer(id, student).subscribe(data => {\n      if (data) {\n        this.getFromServer();\n      } else {\n        alert(\"the update didn't succeed\");\n      }\n    });\n  }\n  deleatFromServer() {}\n  showTest(tests, id) {\n    this.selectedTest = tests;\n    this.idS = id;\n  }\n  constructor(_studentService) {\n    this._studentService = _studentService;\n    _studentService.getFromServer().subscribe(data => {\n      this.students = data;\n    });\n  }\n};\nStudentListComponent = __decorate([Component({\n  selector: 'student-list',\n  templateUrl: './student-list.component.html'\n})], StudentListComponent);","map":{"version":3,"names":["Component","Student","Test","StudentListComponent","showDetails","student","selectedStudent","s","students","absentDays","sumdays","_studentService","sumAbsantDays","idS","addStudent","Date","Years","first","idN","numbersOfDays","begginingDate","addNewStudentToList","studentToAdd","length","postInServer","putInServer","undefined","getFromServer","subscribe","data","getFromServerByActive","active","alert","id","deleatFromServer","showTest","tests","selectedTest","constructor","__decorate","selector","templateUrl"],"sources":["C:\\Users\\user1\\Desktop\\angular\\angular_p\\src\\app\\task-list\\task-list.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Student } from '../modules/student/models/student.model';\nimport { Test } from '../modules/student/models/test.model';\nimport { StudentService } from '../modules/student/student.service';\n\n@Component({\n  selector: 'student-list',\n  templateUrl: './student-list.component.html'\n\n})\nexport class StudentListComponent {\n\n  selectedStudent?: Student;\n  selectedTest!: Test[];\n  newStudent!: boolean;\n  // deleatStudent(student: string) {\n  //   for (let s of this.students) {\n  //     if (s.id == student) {\n  //       let studentToDeleate = s;\n  //       let studentToDeleate1 = this.students.indexOf(studentToDeleate);\n  //       this.students.splice(studentToDeleate1, 1);\n  //     }\n  //   }\n  // }\n\n  showDetails(student: Student) {\n\n    this.selectedStudent = student;\n    for (let s of this.students) {\n      s.absentDays[0].sumdays = this._studentService.sumAbsantDays(s.idS);\n\n    }\n\n\n  }\n  addStudent() {\n    this.selectedStudent = new Student(\"\", \"\", \"\", \"\", \"\", true, 0, [new Test(\"1234\", new Date(2023, 12, 23), \"English\", 80)], [], Years.first, [{ idN: 0, numbersOfDays: 0, begginingDate: \"\", sumdays: 0 }]\n\n    );\n\n  }\n\n  addNewStudentToList(studentToAdd: Student) {\n\n    if (studentToAdd.idS == 0) {\n      studentToAdd.idS = this.students.length + 1;\n      studentToAdd.absentDays[0].idN = this.students.length + 1;\n      // הוספה בסרוור שמחזירה מערך מעודכן\n      this.postInServer(studentToAdd);\n    }\n    else {\n      this.putInServer(studentToAdd.idS,studentToAdd);\n    }\n    // for (let s of this.students) {\n    //   if (s.idS == studentToAdd.idS) {\n    //     s.absentDays[0].sumdays = this._studentService.sumAbsantDays(s.absentDays[0].idN)\n\n\n    //   }\n\n    // }\n    this.selectedStudent = undefined;\n\n\n  }\n\n  \n  getFromServer(){\n    this._studentService.getFromServer().subscribe(data=>{\n      this.students=data;\n     });\n  }\n  getFromServerByActive(active:boolean){\n    this._studentService.getFromServerByActive(active).subscribe(data=>{\n      this.students=data;\n    });\n  }\n  postInServer(student:Student){\n    this._studentService.postInServer(student).subscribe(data=>{\n     if(data){\n      this.getFromServer();\n     }\n     else{\n      alert(\"the adding didn't succeed\")\n     }\n    })\n  }\n  putInServer(id:number, student:Student){\n    this._studentService.putInServer(id,student).subscribe(data=>{\n      if(data){\n        this.getFromServer();\n       }\n       else{\n        alert(\"the update didn't succeed\")\n       }\n      })\n  }\n  deleatFromServer(){\n\n  }\n  showTest(tests: Test[], id: string) {\n    this.selectedTest = tests;\n    this.idS = id;\n\n  }\n\n\n\n  constructor(private _studentService: StudentService) {\n   _studentService.getFromServer().subscribe(data=>{\n    this.students=data;\n   });\n  }\n  students!: Student[];\n  idS!: string;\n\n\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}