{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StudentService {\n  getFromServer() {\n    return this._http.get(\"api/Student\");\n  }\n  getFromServerById(idS) {\n    return this._http.get(\"api/Student/\" + idS);\n  }\n  getFromServerByActive(active) {\n    return this._http.get(\"api/Student/\" + active);\n  }\n  postInServer(students) {\n    return this._http.post(\"api/Student\", students);\n  }\n  putInServer(id, students) {\n    return this._http.put(\"api/Student/\" + id, students);\n  }\n  addAbsantDayInServer(id, absant) {\n    return this._http.post(\"api/Student/\" + id, absant);\n  }\n  deletFromServer(idS) {\n    return this._http.delete(\"api/Student/\" + idS);\n  }\n  //מקבלת ID ומחחזירה ממוצע ציונים\n  // avgMark(id: string): number {\n  //   let STUDENTS!:Student[];\n  //   let count=0;\n  //   let allmarks=0;\n  //   this.getFromServer().subscribe(data=>{\n  //     STUDENTS=data;\n  //    });\n  //   for (let s of STUDENTS) {\n  //     if (s.id == id) {\n  //       if(s.testList!=undefined){\n  //           for(let t of s.testList){\n  //             if(t.mark!=undefined)\n  //             {\n  //               allmarks+=t.mark\n  //               count++\n  //             }\n  //           }\n  //       }\n  //       return allmarks/count;\n  //     }\n  //   }\n  //   return 0;\n  // }\n  constructor(_http) {\n    this._http = _http;\n  }\n}\nStudentService.ɵfac = function StudentService_Factory(t) {\n  return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n};\nStudentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StudentService,\n  factory: StudentService.ɵfac\n});","map":{"version":3,"names":["StudentService","getFromServer","_http","get","getFromServerById","idS","getFromServerByActive","active","postInServer","students","post","putInServer","id","put","addAbsantDayInServer","absant","deletFromServer","delete","constructor","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["C:\\Users\\user1\\Desktop\\angular\\angular_p\\src\\app\\modules\\student\\student.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Student } from \"./models/student.model\";\r\nimport { AbsantDays } from \"./models/absantday.model\";\r\n\r\n\r\n@Injectable()\r\nexport class StudentService {\r\n\r\n  getFromServer():Observable<Student[]>{\r\n    return this._http.get<Student[]>(\"api/Student\");\r\n  }\r\n\r\n  getFromServerById(idS:number):Observable<Student>{\r\n    return this._http.get<Student>(\"api/Student/\"+idS);\r\n  }\r\n\r\n  getFromServerByActive(active:boolean):Observable<Student[]>{\r\n    return this._http.get<Student[]>(\"api/Student/\"+active);\r\n  }\r\n\r\n  postInServer(students:Student):Observable<boolean>{\r\n   return this._http.post<boolean>(\"api/Student\",students);\r\n  }\r\n  putInServer(id:number, students:Student):Observable<boolean>{\r\n   \r\n    return this._http.put<boolean>(\"api/Student/\"+id,students);\r\n   }\r\n   addAbsantDayInServer(id:number, absant:AbsantDays):Observable<boolean>{\r\n   \r\n    return this._http.post<boolean>(\"api/Student/\"+id,absant);\r\n   }\r\n   deletFromServer(idS:number):Observable<boolean>{\r\n    return this._http.delete<boolean>(\"api/Student/\"+idS);\r\n   }\r\n  //מקבלת ID ומחחזירה ממוצע ציונים\r\n  // avgMark(id: string): number {\r\n  //   let STUDENTS!:Student[];\r\n  //   let count=0;\r\n  //   let allmarks=0;\r\n  //   this.getFromServer().subscribe(data=>{\r\n  //     STUDENTS=data;\r\n  //    });\r\n  //   for (let s of STUDENTS) {\r\n  //     if (s.id == id) {\r\n  //       if(s.testList!=undefined){\r\n  //           for(let t of s.testList){\r\n  //             if(t.mark!=undefined)\r\n  //             {\r\n  //               allmarks+=t.mark\r\n  //               count++\r\n  //             }\r\n                \r\n  //           }\r\n\r\n  //       }\r\n  //       return allmarks/count;\r\n  //     }\r\n  //   }\r\n  //   return 0;\r\n\r\n  // }\r\n\r\n\r\n  constructor(private _http:HttpClient)\r\n  {\r\n    \r\n  }\r\n}"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAEzBC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACC,KAAK,CAACC,GAAG,CAAY,aAAa,CAAC;EACjD;EAEAC,iBAAiBA,CAACC,GAAU;IAC1B,OAAO,IAAI,CAACH,KAAK,CAACC,GAAG,CAAU,cAAc,GAACE,GAAG,CAAC;EACpD;EAEAC,qBAAqBA,CAACC,MAAc;IAClC,OAAO,IAAI,CAACL,KAAK,CAACC,GAAG,CAAY,cAAc,GAACI,MAAM,CAAC;EACzD;EAEAC,YAAYA,CAACC,QAAgB;IAC5B,OAAO,IAAI,CAACP,KAAK,CAACQ,IAAI,CAAU,aAAa,EAACD,QAAQ,CAAC;EACxD;EACAE,WAAWA,CAACC,EAAS,EAAEH,QAAgB;IAErC,OAAO,IAAI,CAACP,KAAK,CAACW,GAAG,CAAU,cAAc,GAACD,EAAE,EAACH,QAAQ,CAAC;EAC3D;EACAK,oBAAoBA,CAACF,EAAS,EAAEG,MAAiB;IAEhD,OAAO,IAAI,CAACb,KAAK,CAACQ,IAAI,CAAU,cAAc,GAACE,EAAE,EAACG,MAAM,CAAC;EAC1D;EACAC,eAAeA,CAACX,GAAU;IACzB,OAAO,IAAI,CAACH,KAAK,CAACe,MAAM,CAAU,cAAc,GAACZ,GAAG,CAAC;EACtD;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EAEA;EAGAa,YAAoBhB,KAAgB;IAAhB,KAAAA,KAAK,GAALA,KAAK;EAGzB;;AA5DWF,cAAc,C;mBAAdA,cAAc,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdtB,cAAc,C;SAAdA,cAAc;EAAAuB,OAAA,EAAdvB,cAAc,CAAAwB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}