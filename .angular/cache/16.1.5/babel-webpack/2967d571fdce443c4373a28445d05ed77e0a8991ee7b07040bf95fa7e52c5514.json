{"ast":null,"code":"import { Student } from '../modules/student/models/student.model';\nimport { Test } from '../modules/student/models/test.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../modules/student/student.service\";\nexport class StudentListComponent {\n  // deleatStudent(student: string) {\n  //   for (let s of this.students) {\n  //     if (s.id == student) {\n  //       let studentToDeleate = s;\n  //       let studentToDeleate1 = this.students.indexOf(studentToDeleate);\n  //       this.students.splice(studentToDeleate1, 1);\n  //     }\n  //   }\n  // }\n  // showDetails(student: Student) {\n  //   this.selectedStudent = student;\n  //   for (let s of this.students) {\n  //     s.absentDays[0].sumdays = this._studentService.sumAbsantDays(s.idS);\n  //   }\n  // }\n  addStudent() {\n    this.selectedStudent = new Student(\"\", \"\", \"\", \"\", \"\", true, 0, [new Test(\"1234\", new Date(2023, 12, 23), \"English\", 80)], [], Years.first, [{\n      idN: 0,\n      numbersOfDays: 0,\n      begginingDate: \"\",\n      sumdays: 0\n    }]);\n  }\n  addNewStudentToList(studentToAdd) {\n    if (studentToAdd.idS == 0) {\n      studentToAdd.idS = this.students.length + 1;\n      studentToAdd.absentDays[0].idN = this.students.length + 1;\n      // הוספה בסרוור שמחזירה מערך מעודכן\n      this.postInServer(studentToAdd);\n    } else {\n      this.putInServer(studentToAdd.idS, studentToAdd);\n    }\n    // for (let s of this.students) {\n    //   if (s.idS == studentToAdd.idS) {\n    //     s.absentDays[0].sumdays = this._studentService.sumAbsantDays(s.absentDays[0].idN)\n    //   }\n    // }\n    this.selectedStudent = undefined;\n  }\n  getFromServer() {\n    this._studentService.getFromServer().subscribe(data => {\n      this.students = data;\n    });\n  }\n  getFromServerByActive(active) {\n    this._studentService.getFromServerByActive(active).subscribe(data => {\n      this.students = data;\n    });\n  }\n  postInServer(student) {\n    this._studentService.postInServer(student).subscribe(data => {\n      if (data) {\n        this.getFromServer();\n      } else {\n        alert(\"the adding didn't succeed\");\n      }\n    });\n  }\n  putInServer(id, student) {\n    this._studentService.putInServer(id, student).subscribe(data => {\n      if (data) {\n        this.getFromServer();\n      } else {\n        alert(\"the update didn't succeed\");\n      }\n    });\n  }\n  deleatFromServer() {}\n  constructor(_studentService) {\n    this._studentService = _studentService;\n    _studentService.getFromServer().subscribe(data => {\n      this.students = data;\n    });\n  }\n}\nStudentListComponent.ɵfac = function StudentListComponent_Factory(t) {\n  return new (t || StudentListComponent)(i0.ɵɵdirectiveInject(i1.StudentService));\n};\nStudentListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StudentListComponent,\n  selectors: [[\"student-list\"]],\n  decls: 2,\n  vars: 0,\n  template: function StudentListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"student-list works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["Student","Test","StudentListComponent","addStudent","selectedStudent","Date","Years","first","idN","numbersOfDays","begginingDate","sumdays","addNewStudentToList","studentToAdd","idS","students","length","absentDays","postInServer","putInServer","undefined","getFromServer","_studentService","subscribe","data","getFromServerByActive","active","student","alert","id","deleatFromServer","constructor","i0","ɵɵdirectiveInject","i1","StudentService","selectors","decls","vars","template","StudentListComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\user1\\Desktop\\angular\\angular_p\\src\\app\\student-list\\student-list.component.ts","C:\\Users\\user1\\Desktop\\angular\\angular_p\\src\\app\\student-list\\student-list.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Student } from '../modules/student/models/student.model';\nimport { Test } from '../modules/student/models/test.model';\nimport { StudentService } from '../modules/student/student.service';\n\n@Component({\n  selector: 'student-list',\n  templateUrl: './student-list.component.html'\n\n})\nexport class StudentListComponent {\n\n  selectedStudent?: Student;\n  selectedTest!: Test[];\n  newStudent!: boolean;\n  // deleatStudent(student: string) {\n  //   for (let s of this.students) {\n  //     if (s.id == student) {\n  //       let studentToDeleate = s;\n  //       let studentToDeleate1 = this.students.indexOf(studentToDeleate);\n  //       this.students.splice(studentToDeleate1, 1);\n  //     }\n  //   }\n  // }\n\n  // showDetails(student: Student) {\n\n  //   this.selectedStudent = student;\n  //   for (let s of this.students) {\n  //     s.absentDays[0].sumdays = this._studentService.sumAbsantDays(s.idS);\n\n  //   }\n\n\n  // }\n  addStudent() {\n    this.selectedStudent = new Student(\"\", \"\", \"\", \"\", \"\", true, 0, [new Test(\"1234\", new Date(2023, 12, 23), \"English\", 80)], [], Years.first, [{ idN: 0, numbersOfDays: 0, begginingDate: \"\", sumdays: 0 }]\n\n    );\n\n  }\n\n  addNewStudentToList(studentToAdd: Student) {\n\n    if (studentToAdd.idS == 0) {\n      studentToAdd.idS = this.students.length + 1;\n      studentToAdd.absentDays[0].idN = this.students.length + 1;\n      // הוספה בסרוור שמחזירה מערך מעודכן\n      this.postInServer(studentToAdd);\n    }\n    else {\n      this.putInServer(studentToAdd.idS,studentToAdd);\n    }\n    // for (let s of this.students) {\n    //   if (s.idS == studentToAdd.idS) {\n    //     s.absentDays[0].sumdays = this._studentService.sumAbsantDays(s.absentDays[0].idN)\n\n\n    //   }\n\n    // }\n    this.selectedStudent = undefined;\n\n\n  } \n  getFromServer(){\n    this._studentService.getFromServer().subscribe(data=>{\n      this.students=data;\n     });\n  }\n  getFromServerByActive(active:boolean){\n    this._studentService.getFromServerByActive(active).subscribe(data=>{\n      this.students=data;\n    });\n  }\n  postInServer(student:Student){\n    this._studentService.postInServer(student).subscribe(data=>{\n     if(data){\n      this.getFromServer();\n     }\n     else{\n      alert(\"the adding didn't succeed\")\n     }\n    })\n  }\n  putInServer(id:number, student:Student){\n    this._studentService.putInServer(id,student).subscribe(data=>{\n      if(data){\n        this.getFromServer();\n       }\n       else{\n        alert(\"the update didn't succeed\")\n       }\n      })\n  }\n  deleatFromServer(){\n\n  }\n  constructor(private _studentService: StudentService) {\n   _studentService.getFromServer().subscribe(data=>{\n    this.students=data;\n   });\n  }\n  students!: Student[];\n}\n\n","<p>student-list works!</p>\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,yCAAyC;AACjE,SAASC,IAAI,QAAQ,sCAAsC;;;AAQ3D,OAAM,MAAOC,oBAAoB;EAK/B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EAEA;EAGA;EACAC,UAAUA,CAAA;IACR,IAAI,CAACC,eAAe,GAAG,IAAIJ,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,IAAIC,IAAI,CAAC,MAAM,EAAE,IAAII,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAEC,KAAK,CAACC,KAAK,EAAE,CAAC;MAAEC,GAAG,EAAE,CAAC;MAAEC,aAAa,EAAE,CAAC;MAAEC,aAAa,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAC,CAAE,CAAC,CAExM;EAEH;EAEAC,mBAAmBA,CAACC,YAAqB;IAEvC,IAAIA,YAAY,CAACC,GAAG,IAAI,CAAC,EAAE;MACzBD,YAAY,CAACC,GAAG,GAAG,IAAI,CAACC,QAAQ,CAACC,MAAM,GAAG,CAAC;MAC3CH,YAAY,CAACI,UAAU,CAAC,CAAC,CAAC,CAACT,GAAG,GAAG,IAAI,CAACO,QAAQ,CAACC,MAAM,GAAG,CAAC;MACzD;MACA,IAAI,CAACE,YAAY,CAACL,YAAY,CAAC;KAChC,MACI;MACH,IAAI,CAACM,WAAW,CAACN,YAAY,CAACC,GAAG,EAACD,YAAY,CAAC;;IAEjD;IACA;IACA;IAGA;IAEA;IACA,IAAI,CAACT,eAAe,GAAGgB,SAAS;EAGlC;EACAC,aAAaA,CAAA;IACX,IAAI,CAACC,eAAe,CAACD,aAAa,EAAE,CAACE,SAAS,CAACC,IAAI,IAAE;MACnD,IAAI,CAACT,QAAQ,GAACS,IAAI;IACnB,CAAC,CAAC;EACL;EACAC,qBAAqBA,CAACC,MAAc;IAClC,IAAI,CAACJ,eAAe,CAACG,qBAAqB,CAACC,MAAM,CAAC,CAACH,SAAS,CAACC,IAAI,IAAE;MACjE,IAAI,CAACT,QAAQ,GAACS,IAAI;IACpB,CAAC,CAAC;EACJ;EACAN,YAAYA,CAACS,OAAe;IAC1B,IAAI,CAACL,eAAe,CAACJ,YAAY,CAACS,OAAO,CAAC,CAACJ,SAAS,CAACC,IAAI,IAAE;MAC1D,IAAGA,IAAI,EAAC;QACP,IAAI,CAACH,aAAa,EAAE;OACpB,MACG;QACHO,KAAK,CAAC,2BAA2B,CAAC;;IAEpC,CAAC,CAAC;EACJ;EACAT,WAAWA,CAACU,EAAS,EAAEF,OAAe;IACpC,IAAI,CAACL,eAAe,CAACH,WAAW,CAACU,EAAE,EAACF,OAAO,CAAC,CAACJ,SAAS,CAACC,IAAI,IAAE;MAC3D,IAAGA,IAAI,EAAC;QACN,IAAI,CAACH,aAAa,EAAE;OACpB,MACG;QACHO,KAAK,CAAC,2BAA2B,CAAC;;IAEpC,CAAC,CAAC;EACN;EACAE,gBAAgBA,CAAA,GAEhB;EACAC,YAAoBT,eAA+B;IAA/B,KAAAA,eAAe,GAAfA,eAAe;IAClCA,eAAe,CAACD,aAAa,EAAE,CAACE,SAAS,CAACC,IAAI,IAAE;MAC/C,IAAI,CAACT,QAAQ,GAACS,IAAI;IACnB,CAAC,CAAC;EACH;;AA5FWtB,oBAAoB,C;mBAApBA,oBAAoB,EAAA8B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAApBjC,oBAAoB,C;QAApBA,oBAAoB;EAAAkC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVjCT,EAAA,CAAAW,cAAA,QAAG;MAAAX,EAAA,CAAAY,MAAA,0BAAmB;MAAAZ,EAAA,CAAAa,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}