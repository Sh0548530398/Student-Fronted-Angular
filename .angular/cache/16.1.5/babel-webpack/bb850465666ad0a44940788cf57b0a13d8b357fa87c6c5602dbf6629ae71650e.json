{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Years } from '../../models/student.model';\nimport { AbsantDays } from '../../models/absantday.model';\nexport let StudentFormsComponent = class StudentFormsComponent {\n  get student() {\n    return this._student;\n  }\n  set student(value) {\n    this._student = value;\n    if (this._student != undefined) {\n      this.studentForm = new FormGroup({\n        \"idS\": new FormControl(this.student?.idS),\n        \"id\": new FormControl(this.student?.id, [Validators.required, Validators.minLength(4)]),\n        \"firstname\": new FormControl(this.student?.firstname, Validators.required),\n        \"lastname\": new FormControl(this.student?.lastname),\n        \"address\": new FormControl(this.student?.address),\n        \"telephone\": new FormControl(this.student?.telephone),\n        \"active\": new FormControl(this.student?.active),\n        \"marksAvg\": new FormControl(this.student?.marksAvg),\n        \"leftDate\": new FormControl(this.student?.leftDate),\n        \"subjects\": new FormControl(this.student?.sujects),\n        \"years\": new FormControl(this.student?.years),\n        \"absentDays\": new FormControl(this.student?.absentDays)\n      });\n    }\n  }\n  begginingDate(begginingDate) {\n    this.begginingDate_s = begginingDate;\n  }\n  numbersOfDays(numbersOfDays) {\n    this.numbersOfDays_s = numbersOfDays;\n  }\n  showTest(tests) {\n    this.selectedTest = tests;\n  }\n  saveAbsantday() {\n    this.newStudent = this.studentForm.value;\n    this.abs = new AbsantDays(this.newStudent.idS, this.begginingDate_s, parseInt(this.numbersOfDays_s), 0);\n    this.addAbsantDayInServer(this.newStudent.idS, this.abs);\n    this.returnToList();\n  }\n  saveDeatails() {\n    this.newStudent = this.studentForm.value;\n    this.putInServer(this.newStudent.idS, this.newStudent);\n    this.returnToList();\n  }\n  addAbsantDayInServer(id, absant) {\n    this._studentService.addAbsantDayInServer(id, absant).subscribe(data => {});\n  }\n  putInServer(id, student) {\n    this._studentService.putInServer(id, student).subscribe(data => {\n      if (data) {} else {\n        alert(\"the update didn't succeed\");\n      }\n    });\n  }\n  getFromServerById(idS) {\n    this._studentService.getFromServerById(idS).subscribe(data => {\n      this.student = data;\n    });\n  }\n  returnToList() {\n    this._router.navigate([\"/students\"]);\n  }\n  constructor(_studentService, _acr, _router) {\n    this._studentService = _studentService;\n    this._acr = _acr;\n    this._router = _router;\n    this.subjects = [\"English\", \"Math\", \"history\"];\n    this.yearsType = Years;\n  }\n  ngOnInit() {\n    this._acr.paramMap.subscribe(paraMap => {\n      if (paraMap.has(\"idS\")) {\n        this.idS = +paraMap.get(\"idS\");\n      }\n    });\n    this.getFromServerById(this.idS);\n    if (this.student?.testList != undefined) {\n      this.showTest(this.student?.testList);\n    }\n  }\n};\nStudentFormsComponent = __decorate([Component({\n  selector: 'student-forms',\n  templateUrl: './student-forms.component.html'\n})], StudentFormsComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","Years","AbsantDays","StudentFormsComponent","student","_student","value","undefined","studentForm","idS","id","required","minLength","firstname","lastname","address","telephone","active","marksAvg","leftDate","sujects","years","absentDays","begginingDate","begginingDate_s","numbersOfDays","numbersOfDays_s","showTest","tests","selectedTest","saveAbsantday","newStudent","abs","parseInt","addAbsantDayInServer","returnToList","saveDeatails","putInServer","absant","_studentService","subscribe","data","alert","getFromServerById","_router","navigate","constructor","_acr","subjects","yearsType","ngOnInit","paramMap","paraMap","has","get","testList","__decorate","selector","templateUrl"],"sources":["C:\\Users\\user1\\Desktop\\angular\\angular_p\\src\\app\\modules\\student\\components\\student-forms\\student-forms.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Student, Years } from '../../models/student.model';\nimport { AbsantDays } from '../../models/absantday.model';\nimport { StudentService } from '../../student.service';\nimport { Test } from '../../models/test.model';\n\n\n@Component({\n  selector: 'student-forms',\n  templateUrl: './student-forms.component.html'\n})\nexport class StudentFormsComponent {\n\n  studentForm!: FormGroup;\n  begginingDate_s!: string;\n  numbersOfDays_s!: string\n  subjects: string[] = [\"English\", \"Math\", \"history\"];\n  yearsType = Years;\n  abs!: AbsantDays;\n  newStudent!: Student;\n  idS!: number;\n  selectedTest!: Test[];\n\n  \n  private _student?: Student\n\n  public get student(): Student | undefined {\n    return this._student;\n  }\n\n\n \n  public set student(value: Student | undefined) {\n    this._student = value;\n    if (this._student != undefined) {\n      this.studentForm = new FormGroup({\n        \"idS\": new FormControl(this.student?.idS),\n        \"id\": new FormControl(this.student?.id, [Validators.required, Validators.minLength(4)]),\n        \"firstname\": new FormControl(this.student?.firstname, Validators.required),\n        \"lastname\": new FormControl(this.student?.lastname),\n        \"address\": new FormControl(this.student?.address),\n        \"telephone\": new FormControl(this.student?.telephone),\n        \"active\": new FormControl(this.student?.active),\n        \"marksAvg\": new FormControl(this.student?.marksAvg),\n        \"leftDate\": new FormControl(this.student?.leftDate),\n        \"subjects\": new FormControl(this.student?.sujects),\n        \"years\": new FormControl(this.student?.years),\n        \"absentDays\": new FormControl(this.student?.absentDays),\n      });\n    }\n  }\n\n  begginingDate(begginingDate: string) { this.begginingDate_s = begginingDate }\n  numbersOfDays(numbersOfDays: string) { this.numbersOfDays_s = numbersOfDays }\n\n  showTest(tests: Test[]) {\n    this.selectedTest = tests;\n\n  }\n  saveAbsantday() {\n    this.newStudent = this.studentForm.value;\n      this.abs = new AbsantDays(this.newStudent.idS, this.begginingDate_s, parseInt(this.numbersOfDays_s), 0)\n      this.addAbsantDayInServer(this.newStudent.idS, this.abs);\n      this.returnToList()\n  }\n\n  saveDeatails() {\n    this.newStudent = this.studentForm.value;\n    this.putInServer(this.newStudent.idS, this.newStudent)\n    this.returnToList()\n  }\n\n  addAbsantDayInServer(id: number, absant: AbsantDays) {\n    this._studentService.addAbsantDayInServer(id, absant).subscribe(data => {\n    })\n  }\n\n  putInServer(id: number, student: Student) {\n    this._studentService.putInServer(id, student).subscribe(data => {\n      if (data) {\n      }\n      else {\n        alert(\"the update didn't succeed\")\n      }\n    })\n  }\n  getFromServerById(idS: number) {\n    this._studentService.getFromServerById(idS).subscribe(data => {\n      this.student = data;\n    });\n  }\n  returnToList(){\n    this._router.navigate([\"/students\"])\n  }\n\n  constructor(private _studentService: StudentService, private _acr: ActivatedRoute, private _router: Router) {\n\n  }\n\n  ngOnInit(): void {\n    this._acr.paramMap.subscribe(paraMap => {\n      if (paraMap.has(\"idS\")) {\n        this.idS = +paraMap.get(\"idS\");\n      }\n\n    })\n    this.getFromServerById(this.idS);\n    if(this.student?.testList!=undefined){\n       this.showTest(this.student?.testList)\n    }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}